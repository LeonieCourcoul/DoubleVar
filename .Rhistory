else{
if(T_02 < T_01){
if(T_02 > (A_0i+Censure-65)/10 ){ # L'individu est censuré sans démence
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
data_long_i$age.evt <- T_02
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_02
data_long_i$Time_L <- max(visit[which(visit <= T_02)])
data_long_i$Time_R <- max(visit[which(visit <= T_02)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_02),]
i <- i + 1
}
}
else{
if(T_01 > (A_0i+Censure-65)/10){# L'individu est censuré sans démence
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{ #L'individu est dément, on oublie T_02, on calcule T_12
u12 <- runif(1)
S_12 <- function(tps){
(tps/2)*sum(shape_12*wk*(((tps/2)*(sk+1))**(shape_12-1))*exp(alpha0_12 +
alpha_y_12*(beta0 + b0 + (beta1+b1)*((tps/2)*(sk+1))) +
alpha_sigma_12*sigma +
alpha_kappa_12*kappa
))
}
u12_corrige <- u12*exp(-S_12(T_01))
S_12_inv <- function(tstar){
(tstar/2)*sum(shape_12*wk*(((tstar/2)*(sk+1))**(shape_12-1))*exp(alpha0_12 +
alpha_y_12*(beta0 + b0 + (beta1+b1)*((tstar/2)*(sk+1))) +
alpha_sigma_12*sigma +
alpha_kappa_12*kappa
)) + log(u12_corrige)
}
T_12 <- try(expr = uniroot(S_12_inv,
interval = c(0, (A_0i + Censure-65)/10))$root,
silent = TRUE)
if(inherits(T_12, "try-error")){
T_12 <- 100000000
}
if(T_12>(A_0i + Censure-65)/10){
if(T_01 > max(visit)){
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
data_long_i$age.evt <- T_01
data_long_i$evt <- 1
data_long_i$delta1 <- 1
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit[which(visit<=T_01)])
data_long_i$Time_R <- min(visit[which(visit>=T_01)])
i <- i+1
}
}
else{
if(T_01 > max(visit)){
data_long_i$age.evt <- T_12
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
tps_R <- min(visit[which(visit>=T_01)])
if(tps_R <= T_12){
data_long_i$age.evt <- T_01
data_long_i$evt <- 1
data_long_i$delta1 <- 1
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit[which(visit<=T_01)])
data_long_i$Time_R <- min(visit[which(visit>=T_01)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_12),]
i <- i+1
}
else{
data_long_i$age.evt <- T_12
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit[which(visit<=T_12)])
data_long_i$Time_R <- max(visit[which(visit<=T_12)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_12),]
i <- i+1
}
}
}
}
}
}
#browser()
if(add.i){
data_long <- rbind(data_long,data_long_i)
}
}
data_long
}
beta0 <- 140
beta1 <- 2
mu_sigma <- 2.6
mu_kappa <- 2
alpha0_01 <- -1.9
alpha_y_01 <- 0.01
alpha_sigma_01 <- 0.05
alpha_kappa_01 <- 0
alpha0_02 <- -1.9
alpha_y_02 <- 0.005
alpha_sigma_02 <- 0.02
alpha_kappa_02 <- 0
alpha0_12 <- -1.7
alpha_y_12 <- 0.005
alpha_sigma_12 <- 0.05
alpha_kappa_12 <- 0
shape_01 <- 1
shape_02 <- 1
shape_12 <- 1
chol <- matrix(rep(0,16), ncol=4,nrow=4)
chol[1,1] <- 20
chol[2,1:2] <- c(-8, 7)
chol[3,3] <- 0.3
chol[4,3:4] <- c(0.05,0.2)
B <- chol%*%t(chol)
library(mvtnorm)
donnees <- Gen_CI(500,B = B,mu_sigma=mu_sigma,mu_kappa=mu_kappa,nb.mesures = 2,beta0=beta0,beta1=beta1,
shape_01 = shape_01, alpha0_01=alpha0_01, alpha_y_01=alpha_y_01, alpha_sigma_01=alpha_sigma_01, alpha_kappa_01=alpha_kappa_01,
shape_02 = shape_02, alpha0_02 =  alpha0_02, alpha_y_02 =  alpha_y_02, alpha_sigma_02=alpha_sigma_02, alpha_kappa_02 =  alpha_kappa_02,
shape_12 = shape_12, alpha0_12 =  alpha0_12, alpha_y_12 = alpha_y_12, alpha_sigma_12 =  alpha_sigma_12, alpha_kappa_12 =  alpha_kappa_12,
Censure = 20, left_trunc = F, sigma.eps = 0.5)
data.id <- donnees[!duplicated(donnees$ID),]
table(data.id$delta1)
table(data.id$delta2)
nrow(data.id[which(data.id$delta1 == 1& data.id$delta2 == 1),])
nrow(data.id[which(data.id$delta1 == 0& data.id$delta2 == 0),])
donnees$visit <- as.numeric(donnees$visit)
formFixed=y~visit
formRandom=~visit
formGroup=~ID
formSurv <- list(formSurv_01 =~1,
formSurv_02 =~1,
formSurv_12 =~1)
Time <- list(Time_L =~Time_L,
Time_R =~Time_R,
Time_T =~Time_T,
Time_T0 =~Time_T0)
deltas <- list(delta1 =~delta1,
delta2 =~delta2)
timeVar <- "visit"
variability_inter_visit <- TRUE
variability_intra_visit <- TRUE
formGroupVisit =~num.visit
sharedtype <- list(sharedtype_01 = c("current value", "inter visit variability"),#, "intra visit variability"),
sharedtype_02 = c("current value", "inter visit variability"),#, "intra visit variability"),
sharedtype_12 = c("current value", "inter visit variability")#, "intra visit variability")
)
hazard_baseline <- list(hazard_baseline_01 = "Exponential",
hazard_baseline_02 = "Exponential",
hazard_baseline_12 = "Exponential")
nb.knots.splines <- 1
donnees$Time_L[which(donnees$Time_L == 0)] <- 0.00000000000000000001
donnees$Time_R[which(donnees$Time_R == 0)] <- 0.00000000000000000001
esai <- DoubleVar_IDM(formFixed, formRandom, formGroup, formGroupVisit, formSurv,
Time, deltas, timeVar, donnees, correlated_re = FALSE,
variability_inter_visit, variability_intra_visit,
sharedtype, hazard_baseline, nb.knots.splines, nb_pointsGK = 15,
formSlopeFixed = NULL, formSlopeRandom = NULL, index_beta_slope = NULL,
S1 = 2, S2= 5000,
nproc = 1, clustertype = "SOCK", maxiter = 100, print.info = FALSE,
file = "", epsa = 1e-04, epsb = 1e-04, epsd = 1e-04, binit = c( -1.9, 0.01,0.05,
-1.9, 0.005, 0.02,
-1.7, 0.005, 0.05,
140, 2, 2.6, 2, 20, -8, 7, 0.3, 0.05, 0.2), partialH = NULL)
devtools::document()
library(DoubleVar)
library(parallel)
library(dplyr)
library(lcmm)
library(randtoolbox)
library(mvtnorm)
library(survival)
library(marqLevAlg)
library(splines)
library(foreach)
library(flexsurv)
gaussKronrod <-
function (k = 15) {
sk <- c(-0.949107912342758524526189684047851, -0.741531185599394439863864773280788, -0.405845151377397166906606412076961, 0,
0.405845151377397166906606412076961, 0.741531185599394439863864773280788, 0.949107912342758524526189684047851, -0.991455371120812639206854697526329,
-0.864864423359769072789712788640926, -0.586087235467691130294144838258730, -0.207784955007898467600689403773245, 0.207784955007898467600689403773245,
0.586087235467691130294144838258730, 0.864864423359769072789712788640926, 0.991455371120812639206854697526329)
wk15 <- c(0.063092092629978553290700663189204, 0.140653259715525918745189590510238, 0.190350578064785409913256402421014,
0.209482141084727828012999174891714, 0.190350578064785409913256402421014, 0.140653259715525918745189590510238, 0.063092092629978553290700663189204,
0.022935322010529224963732008058970, 0.104790010322250183839876322541518, 0.169004726639267902826583426598550, 0.204432940075298892414161999234649,
0.204432940075298892414161999234649, 0.169004726639267902826583426598550, 0.104790010322250183839876322541518, 0.022935322010529224963732008058970)
wk7 <- c(0.129484966168869693270611432679082, 0.279705391489276667901467771423780, 0.381830050505118944950369775488975,
0.417959183673469387755102040816327, 0.381830050505118944950369775488975, 0.279705391489276667901467771423780, 0.129484966168869693270611432679082)
if (k == 7)
list(sk = sk[1:7], wk = wk7)
else
list(sk = sk, wk = wk15)
}
Gen_CI <- function(n, B, mu_sigma, mu_kappa, nb.mesures, beta0, beta1,
shape_01,alpha0_01, alpha_y_01, alpha_sigma_01, alpha_kappa_01,
shape_02,alpha0_02, alpha_y_02, alpha_sigma_02, alpha_kappa_02,
shape_12,alpha0_12, alpha_y_12, alpha_sigma_12, alpha_kappa_12,
Censure, left_trunc = F, sigma.eps = 0){
sk <- gaussKronrod()$sk
wk <- gaussKronrod()$wk
shape_01 <- shape_01**2
shape_02 <- shape_02**2
shape_12 <- shape_12**2
data_long <- c()
i <- 1
while(i<=n){
add.i <- T
#On tire les effets aléatoires
random.effects <- rmvnorm(n=1, sigma = B)
b0 <- random.effects[1]
b1 <- random.effects[2]
tau.sigma <- random.effects[3]
sigma <- exp(mu_sigma+tau.sigma)
tau.kappa <- random.effects[4]
kappa <- exp(mu_kappa+tau.kappa)
#On génère les temps de visites
A_0i <- 65
if(left_trunc){
A_0i <- runif(1,65,85)
}
T2i <- A_0i + runif(1, 1.8, 2.2)
T4i <- T2i + runif(1, 1.8, 2.2)
T7i <- T4i + runif(1, 2.8, 3.2)
T10i <- T7i + runif(1, 2.8, 3.2)
T12i <- T10i + runif(1, 1.8, 2.2)
T14i <- T12i + runif(1, 1.8, 2.2)
T17i <- T14i + runif(1, 2.8, 3.2)
visit <- c(A_0i, T2i, T4i, T7i, T10i, T12i, T14i, T17i)
visit <- (visit-65)/10
visit <- rep(visit, each = nb.mesures)
#browser()
data_long_i <- c()
data_long_i <- as.data.frame(cbind(rep(i, length(visit)),
rep(c("S0","S2","S4","S7","S10","S12","S14","S17"), each = nb.mesures),
sort(visit)))
colnames(data_long_i) <- c("ID", "num.visit",  "visit")
data_long_i$num.mesures <- rep(1:nb.mesures,length(visit)/nb.mesures)
error1 <- rnorm(length(visit)/nb.mesures, mean = 0, sd = sigma)
error1 <- rep(error1, each = nb.mesures)
error2 <- rnorm(length(visit), mean = 0, sd = kappa)
error <- rnorm(length(visit), mean = 0, sd = sigma.eps)
data_long_i$y <- beta0+b0+visit*(beta1+b1) + error1+error2
data_long_i$Time_T0 <- (A_0i-65)/10
data_long_i <- data_long_i[which(data_long_i$visit <= (A_0i + Censure-65)/10),]
u_01 <- runif(1); u_02 <- runif(1)
S_01_inv <- function(tstar){
(tstar/2)*sum(shape_01*wk*(((tstar/2)*(sk+1))**(shape_01-1))*exp(alpha0_01 +
alpha_y_01*(beta0 + b0 + (beta1+b1)*((tstar/2)*(sk+1))) +
alpha_sigma_01*sigma +
alpha_kappa_01*kappa
)) + log(u_01)
}
T_01 <- try(expr = uniroot(S_01_inv,
interval = c(0, (A_0i + Censure-65)/10))$root,
silent = TRUE)
S_02_inv <- function(tstar){
(tstar/2)*sum(shape_02*wk*(((tstar/2)*(sk+1))**(shape_02-1))*exp(alpha0_02 +
alpha_y_02*(beta0 + b0 + (beta1+b1)*((tstar/2)*(sk+1))) +
alpha_sigma_02*sigma +
alpha_kappa_02*kappa
)) + log(u_02)
}
T_02 <- try(expr = uniroot(S_02_inv,
interval = c(0, (A_0i + Censure-65)/10))$root,
silent = TRUE)
if(inherits(T_01, "try-error")){
T_01 <- 1000000
}
if(inherits(T_02, "try-error")){
T_02 <- 1000000
}
if(T_01 < (A_0i -65)/10 || T_02 < (A_0i-65)/10){ #L'individu n'est pas inclu
add.i <- F
}
else{
if(T_02 < T_01){
if(T_02 > (A_0i+Censure-65)/10 ){ # L'individu est censuré sans démence
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
data_long_i$age.evt <- T_02
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_02
data_long_i$Time_L <- max(visit[which(visit <= T_02)])
data_long_i$Time_R <- max(visit[which(visit <= T_02)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_02),]
i <- i + 1
}
}
else{
if(T_01 > (A_0i+Censure-65)/10){# L'individu est censuré sans démence
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{ #L'individu est dément, on oublie T_02, on calcule T_12
u12 <- runif(1)
S_12 <- function(tps){
(tps/2)*sum(shape_12*wk*(((tps/2)*(sk+1))**(shape_12-1))*exp(alpha0_12 +
alpha_y_12*(beta0 + b0 + (beta1+b1)*((tps/2)*(sk+1))) +
alpha_sigma_12*sigma +
alpha_kappa_12*kappa
))
}
u12_corrige <- u12*exp(-S_12(T_01))
S_12_inv <- function(tstar){
(tstar/2)*sum(shape_12*wk*(((tstar/2)*(sk+1))**(shape_12-1))*exp(alpha0_12 +
alpha_y_12*(beta0 + b0 + (beta1+b1)*((tstar/2)*(sk+1))) +
alpha_sigma_12*sigma +
alpha_kappa_12*kappa
)) + log(u12_corrige)
}
T_12 <- try(expr = uniroot(S_12_inv,
interval = c(0, (A_0i + Censure-65)/10))$root,
silent = TRUE)
if(inherits(T_12, "try-error")){
T_12 <- 100000000
}
if(T_12>(A_0i + Censure-65)/10){
if(T_01 > max(visit)){
data_long_i$age.evt <- (A_0i + Censure-65)/10
data_long_i$evt <- 0
data_long_i$delta1 <- 0
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
data_long_i$age.evt <- T_01
data_long_i$evt <- 1
data_long_i$delta1 <- 1
data_long_i$delta2 <- 0
data_long_i$Time_T <- (A_0i+Censure-65)/10
data_long_i$Time_L <- max(visit[which(visit<=T_01)])
data_long_i$Time_R <- min(visit[which(visit>=T_01)])
i <- i+1
}
}
else{
if(T_01 > max(visit)){
data_long_i$age.evt <- T_12
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit)
data_long_i$Time_R <- max(visit)
i <- i+1
}
else{
tps_R <- min(visit[which(visit>=T_01)])
if(tps_R <= T_12){
data_long_i$age.evt <- T_01
data_long_i$evt <- 1
data_long_i$delta1 <- 1
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit[which(visit<=T_01)])
data_long_i$Time_R <- min(visit[which(visit>=T_01)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_12),]
i <- i+1
}
else{
data_long_i$age.evt <- T_12
data_long_i$evt <- 2
data_long_i$delta1 <- 0
data_long_i$delta2 <- 1
data_long_i$Time_T <- T_12
data_long_i$Time_L <- max(visit[which(visit<=T_12)])
data_long_i$Time_R <- max(visit[which(visit<=T_12)])
data_long_i <- data_long_i[which(data_long_i$visit <= T_12),]
i <- i+1
}
}
}
}
}
}
#browser()
if(add.i){
data_long <- rbind(data_long,data_long_i)
}
}
data_long
}
beta0 <- 140
beta1 <- 2
mu_sigma <- 2.6
mu_kappa <- 2
alpha0_01 <- -1.9
alpha_y_01 <- 0.01
alpha_sigma_01 <- 0.05
alpha_kappa_01 <- 0
alpha0_02 <- -1.9
alpha_y_02 <- 0.005
alpha_sigma_02 <- 0.02
alpha_kappa_02 <- 0
alpha0_12 <- -1.7
alpha_y_12 <- 0.005
alpha_sigma_12 <- 0.05
alpha_kappa_12 <- 0
shape_01 <- 1
shape_02 <- 1
shape_12 <- 1
chol <- matrix(rep(0,16), ncol=4,nrow=4)
chol[1,1] <- 20
chol[2,1:2] <- c(-8, 7)
chol[3,3] <- 0.3
chol[4,3:4] <- c(0.05,0.2)
B <- chol%*%t(chol)
library(mvtnorm)
donnees <- Gen_CI(500,B = B,mu_sigma=mu_sigma,mu_kappa=mu_kappa,nb.mesures = 2,beta0=beta0,beta1=beta1,
shape_01 = shape_01, alpha0_01=alpha0_01, alpha_y_01=alpha_y_01, alpha_sigma_01=alpha_sigma_01, alpha_kappa_01=alpha_kappa_01,
shape_02 = shape_02, alpha0_02 =  alpha0_02, alpha_y_02 =  alpha_y_02, alpha_sigma_02=alpha_sigma_02, alpha_kappa_02 =  alpha_kappa_02,
shape_12 = shape_12, alpha0_12 =  alpha0_12, alpha_y_12 = alpha_y_12, alpha_sigma_12 =  alpha_sigma_12, alpha_kappa_12 =  alpha_kappa_12,
Censure = 20, left_trunc = F, sigma.eps = 0.5)
data.id <- donnees[!duplicated(donnees$ID),]
table(data.id$delta1)
table(data.id$delta2)
nrow(data.id[which(data.id$delta1 == 1& data.id$delta2 == 1),])
nrow(data.id[which(data.id$delta1 == 0& data.id$delta2 == 0),])
donnees$visit <- as.numeric(donnees$visit)
formFixed=y~visit
formRandom=~visit
formGroup=~ID
formSurv <- list(formSurv_01 =~1,
formSurv_02 =~1,
formSurv_12 =~1)
Time <- list(Time_L =~Time_L,
Time_R =~Time_R,
Time_T =~Time_T,
Time_T0 =~Time_T0)
deltas <- list(delta1 =~delta1,
delta2 =~delta2)
timeVar <- "visit"
variability_inter_visit <- TRUE
variability_intra_visit <- TRUE
formGroupVisit =~num.visit
sharedtype <- list(sharedtype_01 = c("current value", "inter visit variability"),#, "intra visit variability"),
sharedtype_02 = c("current value", "inter visit variability"),#, "intra visit variability"),
sharedtype_12 = c("current value", "inter visit variability")#, "intra visit variability")
)
hazard_baseline <- list(hazard_baseline_01 = "Exponential",
hazard_baseline_02 = "Exponential",
hazard_baseline_12 = "Exponential")
nb.knots.splines <- 1
donnees$Time_L[which(donnees$Time_L == 0)] <- 0.00000000000000000001
donnees$Time_R[which(donnees$Time_R == 0)] <- 0.00000000000000000001
esai <- DoubleVar_IDM(formFixed, formRandom, formGroup, formGroupVisit, formSurv,
Time, deltas, timeVar, donnees, correlated_re = FALSE,
variability_inter_visit, variability_intra_visit,
sharedtype, hazard_baseline, nb.knots.splines, nb_pointsGK = 15,
formSlopeFixed = NULL, formSlopeRandom = NULL, index_beta_slope = NULL,
S1 = 2, S2= 5000,
nproc = 1, clustertype = "SOCK", maxiter = 100, print.info = FALSE,
file = "", epsa = 1e-04, epsb = 1e-04, epsd = 1e-04, binit = c( -1.9, 0.01,0.05,
-1.9, 0.005, 0.02,
-1.7, 0.005, 0.05,
140, 2, 2.6, 2, 20, -8, 7, 0.3, 0.05, 0.2), partialH = NULL)
